#!/usr/bin/env bash
# vim: ts=4 sw=4 expandtab
# Tools/utilities for development and admin of this project

export stodo_base=/home/development/jtc/s-todo
extra_env=$stodo_base/.env.auxiliary
if [ -d $PWD/bin ]; then
    PATH=$PATH:$PWD/bin
fi

# Open all source files in gvim.
editsrc() {
    gvim -geometry +0+0 -c 'set lines=65' $(git ls-files|
        egrep '\.rb$|\<stodo\>')
}

# Run rdbg on initial-processing.rb
rdebug_initp() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-init.initproc $stodo_base/debug/run_init_proc.rb
}

# Run rdbg on stodo-mgmt.rb
rdebug_stodo() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-init $stodo_base/debug/run_stodo.rb $@
}

# Run rdbg on stodo-mgmt.rb
rdebug_add() {
    dbug_temp_args="$@" \
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-add $stodo_base/debug/run_add.rb
}

# Run rdbg on stodo-mgmt.rb to invoke 'edit_target'.
rdebug_editt() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-init.edit_target $stodo_base/debug/run_stodo.rb $@
}

# Run rdbg on report.rb
rdebug_report() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-init $stodo_base/debug/run_report.rb $@
}

# Run rdbg on stodo-mgmt.rb with 'clear_descendants' option.
rdebug_cleard() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-init $stodo_base/debug/run_stodo.rb clear_descendants $@
}

# Run rdbg on stodo-mgmt.rb change_parent <handle> <parent-handle>
# Note: The change_parent argument is hard-coded here, so should not be supplied by the user.
rdebug_chpar() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-chparent $stodo_base/debug/run_stodo.rb change_parent $@
}

# Run rdbg on stodo-mgmt.rb clone <handle> <new-handle>
# Note: The clone argument is hard-coded here, so should not be supplied by the user.
rdebug_clone() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-clone $stodo_base/debug/run_stodo.rb clone $@
}

# Run rdbg on stodo-mgmt.rb delete <handle> ...
# Note: The delete argument is hard-coded here, so should not be supplied by the user.
rdebug_delete() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-delete $stodo_base/debug/run_stodo.rb delete $@
}

rdebug_remove_d() {
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-remove_d $stodo_base/debug/run_stodo.rb remove_descendant $@
}

# Run rdbg on 'stodo-template.rb temp' with the specified handle.
# Usage: rdebug_temp <new-handle> <item-type>
rdebug_temp() {
    dbug_temp_args="-ie jim.cochrane@gmail.com -oe jim.cochrane@gmail.com -pr 2 -t debug-new-item -ti 2027-02-16 12:00 -h $@" \
    STODO_PATH=$stodo_base/src \
    rdbg --init-script=$stodo_base/.rdbg-temp $stodo_base/debug/run_template.rb
}

# Run rdbg on stodo-mgmt.rb change <handle> [<options ...>]
# Note: The 'change/change_item' argument is hard-coded here, so should not be supplied by the user.
rdebug_change() {
#    dbug_temp_args="$@" \
#    STODO_PATH=$stodo_base/src \
#    rdbg --init-script=$stodo_base/.rdbg-change $stodo_base/debug/run_stodo.rb change_item

#    rdbg --init-script=$stodo_base/.rdbg-init $stodo_base/debug/run_stodo.rb change_item
    rdbg --init-script=$stodo_base/.rdbg-change $stodo_base/debug/run_stodo.rb change_item

}

alias rdi=rdebug_initp
alias rdst=rdebug_stodo
alias rdclrd=rdebug_cleard
alias rdedt=rdebug_editt
alias rdtmp=rdebug_temp

if [ -r $extra_env ]; then
    . $extra_env
fi
