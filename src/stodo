#!/usr/bin/env bash

progname=$(basename $0)
stodopath=$(dirname $0)
initproc=main/initial-processing.rb
notifyproc=main/ongoing-processing.rb
mktmpl=main/stodo-template.rb
report=main/report.rb
edit=main/stodo-mgmt.rb
stodo_envpath="$STODO_PATH"


mainhelp() {
    echo -e "Usage: $progname <command>\n\ncommands:"
    echo -e "  new|init     look for and process new to-do items"
    echo -e "  notify       send pending notifications to-do items"
    echo -e "  combined     combine notifications with processing of new items"
    echo -e "  report       display a report of existing to-do items"
    echo -e "  del <h>...   delete targets with handles <h>, ..."
    echo -e "  temp         output a to-do item template"
}

indepth_help() {
    case "$1" in
      rep*) report_help ;;
      temp*) template_help ;;
    esac
}

help() {
  if [ $# == 0 ]; then
    mainhelp
  else
    indepth_help $*
  fi
}

set_rubylib() {
    moredirs="facility error configuration notification specs data"
    moredirs="$moredirs coordination"
    rubylib="RUBYLIB=$STEXEC_PATH/core"
    for d in $moredirs; do
        rubylib="$rubylib:$STEXEC_PATH/$d"
    done
}

checkpath() {
    for f in $*; do
        STEXEC_PATH=
        for p in $stodopath $stodo_envpath; do
            if [ -x "$p/$f" ]; then
                STEXEC_PATH=$p
            fi
        done
        if [ -z "$STEXEC_PATH" ]; then
            echo "Error: file $f not found"
            exit 11
        fi
    done
    if [ -z "$rubylib" ]; then
        set_rubylib
    fi
}

run() {
    cmd=$1; shift
    eval $rubylib $STEXEC_PATH/$cmd $*
}

process_new_items() {
    checkpath $initproc
    run $initproc
}

process_notifications() {
    checkpath $notifyproc
    run $notifyproc
}

do_combined_processing() {
    checkpath $initproc $notifyproc
    run $initproc
    sleep 1
    run $notifyproc
}

do_report() {
    checkpath $report
    run $report $*
}

do_edit() {
    checkpath $edit
    run $edit $*
}

make_template() {
    checkpath $mktmpl
    run $mktmpl $*
}

report_help() {
    echo -e "Usage: $progname rep[ort] [<report-type> [handle ...]]"
    echo -e "\nWhere <report-type> is one of:"
    echo -e "  short        short report - list only handles and titles"
    echo -e "  summary      summary report for the specified handles"
    echo -e "  complete     complete report for the specified handles"
    echo -e "  due          pending items with their \"due\" date"
    echo -e "  remind       upcoming (first) reminder"
    echo -e "  remindh      upcoming (first) reminder" \
        "(with handle instead of title)"
    echo -e "  remindall    all upcoming reminders"
    echo -e "  children     report of all child relationships"
    echo -e "\n(If <report-type> is not specified, list all target handles.)"
}

template_help() {
    echo -e "Usage: $progname temp [<type>]"
    echo -e "Where <type> is one of:\c"
    echo -e " task, memo, appointment (or event), project"
    echo -e "\n(If <type> is not specified, assume 'task'.)"
}

case $1 in
    new|init) process_new_items
        ;;
    noti*) process_notifications
        ;;
    comb*) do_combined_processing
        ;;
    rep*) shift; do_report $*
        ;;
    del*)
      shift;
      do_edit delete $*
        ;;
    temp*) shift; make_template $*
        ;;
    *) shift; help $*
        ;;
esac
