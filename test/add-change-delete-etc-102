#!/bin/bash
# (define env. var. STODO_KEEP_ARTIFACTS to force any new items to NOT
# be deleted.)

parse_args() {
  for arg; do
    if expr $arg : ".*@" >/dev/null; then
      email=$arg
    else
      testhndl=$arg$$
    fi
  done
}

create_test() {
  create $testhndl
  if report $testhndl|awk 'BEGIN { hitcount = 0; EXPCOUNT = 5 }
    /handle: *'$testhndl'/ {  ++hitcount }
    /title: *'"$origttl"'/ {  ++hitcount }
    /email: *'$email'/ {  if (! emailset) { ++hitcount}; ++emailset }
    /description: *'"$desc"'/ {  ++hitcount }
    /type: *'$testtype'/ {  ++hitcount }
    END {
      if (hitcount != EXPCOUNT) {
        print "(expected " EXPCOUNT " matches, got: " hitcount ")"
        exit 1
      } else {
        exit 0
      }
    }'
  then
    echo "creation test SUCCEEDED"
  else
    echo "creation test failed"
    exit 99
  fi
}

state_test() {
  change_state $newstatecmd $testhndl
  if report $testhndl|awk 'BEGIN { state_is_correct = 0 }
    /status: *'$newstate'/ { state_is_correct = 1; state=$2; exit }
    END {
      if (state_is_correct) {
        print "([state_test] new state is correct: " state ")"
        exit 0
      } else {
        print "([state_test] new state is incorrect)"
        exit 1
      }
    }'
  then
    echo "state-change test SUCCEEDED"
  else
    echo "state-change test failed"
    exit 96
  fi
}

delete_test() {
  if ! [ "$STODO_KEEP_ARTIFACTS" ]; then
    delete $testhndl
    if report $testhndl|grep -q "$testhndl"; then
      echo "deletion test failed in deletion of $testhndl"
      exit 97
    else
      echo "deletion test SUCCEEDED"
    fi
  else
      echo "deletion test bypassed (keeping new item with handle: $testhndl"
  fi
}

# Set "vars" for origination/creation.
set_ovars() {
  ST_HANDLE=$testhndl
  ST_TYPE=$testtype
  ST_TITLE=$origttl
  ST_DESC=$desc
  ST_EMAIL=$email
}

# Set new "vars".
set_nvars() {
  ST_HANDLE=$testhndl
  ST_TITLE=$newttl
  ST_DESC=$desc
  ST_EMAIL=$email
  ST_PRIO=$newprio
}

basedir=$(dirname $0)
toolsfile=$basedir/tools
if [ -r $toolsfile -a -f $toolsfile ]; then
  . $toolsfile
  init_tools
fi

email="foo@foo.test"
testhndl=test-stodo$$
testtype=task
origttl="original title"
desc='original, bland description'
newstate=suspended
newstatecmd=suspend

parse_args $@
set_ovars
create_test
set_nvars
state_test
delete_test
