#!/bin/bash
# vim: sw=2 ts=2 expandtab
# Change handle test

setup() {
  create=create
  delete=delete
  modify=modify
  chhandle=chhandle
  if [ "$TEST_REPL" ]; then
    create=repl_create
    delete=repl_delete
    modify=repl_modify
    chhandle=repl_chhandle
  echo add $ST_TYPE $STODO_OPTS|$repl $user $appname
  fi
}

# (define env. var. STODO_KEEP_ARTIFACTS to force any new items to NOT
# be deleted.)

# Set "vars" for origination/creation.
set_main_vars() {
  ST_HANDLE=$testhndl
  ST_TYPE=$testtype
  ST_TITLE=$mainttl
  ST_PARENT=$intended_parent
  ST_DESC=$desc
  ST_EMAIL=$email
  ST_ATTACH="$attchs"
  ST_DTTIME='now'
}

change-handle-test() {
  if [ $# -lt 3 ]; then
    echo "fatal: change-handle-test: need three arguments" >&2
    exit 13
  fi
  result=0
  local h1=$1 h2=$2 p=$3
  $chhandle $h1 $h2
  checkparent $h2 $p
  if ! checkchild $p $h2; then
    result=2
    echo "change-handle-test - error: $h2 is not parent's ($p) child." >&2
  fi
  return $result
}

basedir=$(dirname $0)
toolsfile=$basedir/tools
testenv=$basedir/.env
if [ -r $testenv -a -f $testenv ]; then
  . $testenv
fi
if [ -r $toolsfile -a -f $toolsfile ]; then
  . $toolsfile
  init_tools
fi
if [ "$NO_ASSERT" ]; then
  unset ENABLE_ASSERTION
fi

# (Use file $testenv, sourced above, to set user_email.)
if [ "$ST_EMAIL" ]; then
  email="$ST_EMAIL"
else
  email="test@foo.invalid"
fi
firsthndl=test-stodo$$
secondhndl="new-hndl-$firsthndl"
parent=parent-test-stodo$$
testtype=task
mainttl="new-task-$$"
newttl="This is new task test number $$."
newttlregex="This.is.new.task.*number"

setup
stodo starttran
testcount=0
successcount=0
testhndl=$parent
set_main_vars
# Create the parent.
$create
testhndl=$firsthndl
intended_parent=$parent
set_main_vars
# Create the target (child) item.
$create
if checkparent $firsthndl $parent; then ((++successcount)); fi
((++testcount))
if change-handle-test $firsthndl $secondhndl $parent; then
  ((++successcount))
fi
((++testcount))
[ $successcount = $testcount ]
status=$?
$delete $parent
$delete $secondhndl
stodo endtran
testreport $testcount $successcount
exit $status
