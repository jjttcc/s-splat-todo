#!/bin/bash
# vim: sw=2 ts=2 expandtab
# Change parent test

# (define env. var. STODO_KEEP_ARTIFACTS to force any new items to NOT
# be deleted.)

# Set "vars" for origination/creation.
set_main_vars() {
  ST_HANDLE=$testhndl
  ST_TYPE=$testtype
  ST_TITLE=$mainttl
  ST_PARENT=$intended_parent
  ST_DESC=$desc
  ST_EMAIL=$email
  ST_ATTACH="$attchs"
  ST_DTTIME='now'
}

checkparent() {
  local h=$1 p=$2
  stodo report comp $h|grep -q "^parent: *$p$"
}

chparent_test() {
  local hndl=$1 parent=$2
  stodo chparent $hndl $parent
  checkparent $hndl $parent
}

basedir=$(dirname $0)
toolsfile=$basedir/tools
testenv=$basedir/.env
if [ -r $testenv -a -f $testenv ]; then
  . $testenv
fi
if [ -r $toolsfile -a -f $toolsfile ]; then
  . $toolsfile
  init_tools
fi

# (Use file $testenv, sourced above, to set user_email.)
if [ "$ST_EMAIL" ]; then
  email="$ST_EMAIL"
else
  email="test@foo.invalid"
fi
mainhndl=test-stodo$$
origparent=parent1-test-stodo$$
newparent=parent2-test-stodo$$
testtype=task
mainttl="new-task-$$"
newttl="This is new task test number $$."
newttlregex="This.is.new.task.*number"

stodo starttran
testcount=0
successcount=0
testhndl=$origparent
set_main_vars
# Create the first parent.
create
testhndl=$newparent
set_main_vars
# Create the new parent.
create
testhndl=$mainhndl
intended_parent=$origparent
set_main_vars
# Create the target (child) item.
create
if checkparent $mainhndl $origparent; then ((++successcount)); fi
((++testcount))
if chparent_test $testhndl $newparent; then ((++successcount)); fi
((++testcount))
[ $successcount = $testcount ]
status=$?
delete $mainhndl
delete $origparent
delete $newparent
stodo endtran
testreport $testcount $successcount
exit $status
